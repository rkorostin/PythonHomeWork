""" Напишите программу для проверки истинности утверждения ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z для всех значений предикат.
¬ отрицание (not). Например, x + 8 = y - 2 ⇔ x + 10 = y
⋁ дизъюнкция (or). Например, n ≥ 4 ∨ n ≤ 2 ⇔ n ≠ 3
⋀ конъюнкцию (and). Например, n < 4 ∧ n >2 ⇔ n = 3

"""

print('Проверка истинности утверждения "¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z" для всех значений предикат')

"""
Задача чисто на доказательство математического утверждения с помощью программирования...
Например, если все значения будут одинаковыми, допустим "1":
if (not (1 or 1 or 1) == (not 1 and not 1 and not 1)):
    print("Утверждение истинно")
else:
    print("Утверждение ложно")
Ну и как бы по идее и всё...
Но, можно и заморочиться...
Погнали!

"""

#Реализовываем функцию, которая будет принимать любое значение от пользователя для X, Y, Z
def InputNumbersFromUser(x):
    list = [] # Пока пустой список
    listXYZ = ["X", "Y", "Z"] # Список из известных значений X, Y, Z
    for i in range(x): #Используем диапазон
        list.append(input(f'Введите значение {listXYZ[i]}: ')) # Наполняем динамически список list значениями, которые введет user
    return list # Получаем список из значений, которые ввел user

#А теперь берём утверждение из задания и тупо переписываем каждую его часть
def CheckTrueStatement(x): # x - это список, который был получен из функции inputNumbersFromUser
    leftStatement = not (x[0] or x[1] or x[2]) # ¬(X ⋁ Y ⋁ Z)
    rightStatement = not x[0] and not x[1] and not x[2] # ¬X ⋀ ¬Y ⋀ ¬Z
    result = leftStatement == rightStatement # ¬(X ⋁ Y ⋁ Z) = ¬X ⋀ ¬Y ⋀ ¬Z
    return result

if CheckTrueStatement(InputNumbersFromUser(3)) == True: # а теперь осталось просто проверить верно ли утверждение или ложно
    print("Утверждение истинно")
else:
    print("Утверждение ложно")